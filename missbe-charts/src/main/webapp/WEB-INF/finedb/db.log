CREATE USER SA PASSWORD "" ADMIN
/*C1*/SET SCHEMA PUBLIC
CONNECT USER SA
DISCONNECT
/*C2*/SET SCHEMA PUBLIC
CONNECT USER SA
DISCONNECT
/*C3*/SET SCHEMA PUBLIC
CONNECT USER SA
/*C4*/SET SCHEMA PUBLIC
CONNECT USER SA
/*C5*/SET SCHEMA PUBLIC
CONNECT USER SA
/*C6*/SET SCHEMA PUBLIC
CONNECT USER SA
/*C7*/SET SCHEMA PUBLIC
CONNECT USER SA
/*C8*/SET SCHEMA PUBLIC
CONNECT USER SA
/*C9*/SET SCHEMA PUBLIC
CONNECT USER SA
/*C10*/SET SCHEMA PUBLIC
CONNECT USER SA
/*C11*/SET SCHEMA PUBLIC
CONNECT USER SA
/*C12*/SET SCHEMA PUBLIC
CONNECT USER SA
SET LOGSIZE 2
SET AUTOCOMMIT FALSE
CREATE TABLE QRTZ_JOB_DETAILS(JOB_NAME VARCHAR(200) NOT NULL,JOB_GROUP VARCHAR(200) NOT NULL,DESCRIPTION VARCHAR(250) NULL,JOB_CLASS_NAME VARCHAR(250) NOT NULL,IS_DURABLE BOOLEAN NOT NULL,IS_VOLATILE BOOLEAN NOT NULL,IS_STATEFUL BOOLEAN NOT NULL,REQUESTS_RECOVERY BOOLEAN NOT NULL,JOB_DATA BINARY NULL,PRIMARY KEY (JOB_NAME,JOB_GROUP))
CREATE TABLE QRTZ_JOB_LISTENERS(JOB_NAME VARCHAR(200) NOT NULL,JOB_GROUP VARCHAR(200) NOT NULL,JOB_LISTENER VARCHAR(200) NOT NULL,PRIMARY KEY (JOB_NAME,JOB_GROUP,JOB_LISTENER))
CREATE TABLE QRTZ_TRIGGERS(TRIGGER_NAME VARCHAR(200) NOT NULL,TRIGGER_GROUP VARCHAR(200) NOT NULL,JOB_NAME VARCHAR(200) NOT NULL,JOB_GROUP VARCHAR(200) NOT NULL,IS_VOLATILE BOOLEAN NOT NULL,DESCRIPTION VARCHAR(250) NULL,NEXT_FIRE_TIME BIGINT NULL,PREV_FIRE_TIME BIGINT NULL,PRIORITY INTEGER NULL,TRIGGER_STATE VARCHAR(16) NOT NULL,TRIGGER_TYPE VARCHAR(8) NOT NULL,START_TIME BIGINT NOT NULL,END_TIME BIGINT NULL,CALENDAR_NAME VARCHAR(200) NULL,MISFIRE_INSTR SMALLINT NULL,JOB_DATA BINARY NULL,PRIMARY KEY (TRIGGER_NAME,TRIGGER_GROUP))
CREATE TABLE QRTZ_SIMPLE_TRIGGERS(TRIGGER_NAME VARCHAR(200) NOT NULL,TRIGGER_GROUP VARCHAR(200) NOT NULL,REPEAT_COUNT BIGINT NOT NULL,REPEAT_INTERVAL BIGINT NOT NULL,TIMES_TRIGGERED BIGINT NOT NULL,PRIMARY KEY (TRIGGER_NAME,TRIGGER_GROUP))
CREATE TABLE QRTZ_CRON_TRIGGERS(TRIGGER_NAME VARCHAR(200) NOT NULL,TRIGGER_GROUP VARCHAR(200) NOT NULL,CRON_EXPRESSION VARCHAR(120) NOT NULL,TIME_ZONE_ID VARCHAR(80) NULL,PRIMARY KEY (TRIGGER_NAME,TRIGGER_GROUP))
CREATE TABLE QRTZ_BLOB_TRIGGERS(TRIGGER_NAME VARCHAR(200) NOT NULL,TRIGGER_GROUP VARCHAR(200) NOT NULL,BLOB_DATA BINARY NULL,PRIMARY KEY (TRIGGER_NAME,TRIGGER_GROUP))
CREATE TABLE QRTZ_TRIGGER_LISTENERS(TRIGGER_NAME VARCHAR(200) NOT NULL,TRIGGER_GROUP VARCHAR(200) NOT NULL,TRIGGER_LISTENER VARCHAR(200) NOT NULL,PRIMARY KEY (TRIGGER_NAME,TRIGGER_GROUP,TRIGGER_LISTENER))
CREATE TABLE QRTZ_CALENDARS(CALENDAR_NAME VARCHAR(200) NOT NULL,CALENDAR BINARY NOT NULL,PRIMARY KEY (CALENDAR_NAME))
CREATE TABLE QRTZ_PAUSED_TRIGGER_GRPS(TRIGGER_GROUP VARCHAR(200) NOT NULL,PRIMARY KEY (TRIGGER_GROUP))
CREATE TABLE QRTZ_FIRED_TRIGGERS(ENTRY_ID VARCHAR(95) NOT NULL,TRIGGER_NAME VARCHAR(200) NOT NULL,TRIGGER_GROUP VARCHAR(200) NOT NULL,IS_VOLATILE BOOLEAN NOT NULL,INSTANCE_NAME VARCHAR(200) NOT NULL,FIRED_TIME BIGINT NOT NULL,PRIORITY INTEGER NOT NULL,STATE VARCHAR(16) NOT NULL,JOB_NAME VARCHAR(200) NULL,JOB_GROUP VARCHAR(200) NULL,IS_STATEFUL BOOLEAN NULL,REQUESTS_RECOVERY BOOLEAN NULL,PRIMARY KEY (ENTRY_ID))
CREATE TABLE QRTZ_SCHEDULER_STATE(INSTANCE_NAME VARCHAR(200) NOT NULL,LAST_CHECKIN_TIME BIGINT NOT NULL,CHECKIN_INTERVAL BIGINT NOT NULL,PRIMARY KEY (INSTANCE_NAME))
CREATE TABLE QRTZ_LOCKS(LOCK_NAME VARCHAR(40) NOT NULL,PRIMARY KEY (LOCK_NAME))
INSERT INTO QRTZ_LOCKS VALUES('TRIGGER_ACCESS')
INSERT INTO QRTZ_LOCKS VALUES('JOB_ACCESS')
INSERT INTO QRTZ_LOCKS VALUES('CALENDAR_ACCESS')
INSERT INTO QRTZ_LOCKS VALUES('STATE_ACCESS')
INSERT INTO QRTZ_LOCKS VALUES('MISFIRE_ACCESS')
/*C11*/SET AUTOCOMMIT FALSE
SET AUTOCOMMIT TRUE
/*C12*/COMMIT
CREATE TABLE fr_schedule_task(id INTEGER GENERATED BY DEFAULT AS IDENTITY (start with 1),name VARCHAR(255) NULL,description VARCHAR(255) NULL,reportletPath VARCHAR(255) NULL,repeatTime VARCHAR(20) NULL,repeatTimes VARCHAR(20) NULL,counts INTEGER NULL,showType INTEGER NULL,itriggerId INTEGER NULL,task_parameters VARCHAR(255) NULL,scheduledOupputId INTEGER NULL,executeType INTEGER NULL,executeFormula VARCHAR(255) NULL,executeClass VARCHAR(255) NULL,PRIMARY KEY (id))
CREATE TABLE fr_schedule_output(id INTEGER GENERATED BY DEFAULT AS IDENTITY (start with 1),base_name VARCHAR(255) NULL,description VARCHAR(255) NULL,folderEntryId INTEGER NULL,format INTEGER NULL,ListId INTEGER NULL,isCreateCPRByUsername BOOLEAN NULL,isSendEmailByUsername BOOLEAN NULL,usernames VARCHAR(1023) NULL,PRIMARY KEY (id))
CREATE TABLE fr_schedule_actionlist(id INTEGER GENERATED BY DEFAULT AS IDENTITY (start with 1),emailId INTEGER NULL,ftpId INTEGER NULL,printId INTEGER NULL,classId INTEGER NULL,PRIMARY KEY (id))
CREATE TABLE fr_schedule_ftp(id INTEGER GENERATED BY DEFAULT AS IDENTITY (start with 1),serverAddress VARCHAR(255) NULL,port INTEGER NULL,savePath VARCHAR(255) NULL,username VARCHAR(255) NULL,password VARCHAR(255) NULL,PRIMARY KEY (id))
CREATE TABLE fr_schedule_print(id INTEGER GENERATED BY DEFAULT AS IDENTITY (start with 1),printerName VARCHAR(255) NULL,PRIMARY KEY (id))
CREATE TABLE fr_schedule_classaction(id INTEGER GENERATED BY DEFAULT AS IDENTITY (start with 1),className VARCHAR(255) NULL,PRIMARY KEY (id))
CREATE TABLE fr_schedule_email(id INTEGER GENERATED BY DEFAULT AS IDENTITY (start with 1),toAddress VARCHAR(255) NULL,ccAddress VARCHAR(255) NULL,bccAddress VARCHAR(255) NULL,subject VARCHAR(255) NULL,bodyContent VARCHAR(255) NULL,PRIMARY KEY (id))
CREATE TABLE fr_once_itrigger(id INTEGER GENERATED BY DEFAULT AS IDENTITY (start with 1),timezone_id VARCHAR(255) NULL,start_type INTEGER NULL,startTime TIMESTAMP NULL,PRIMARY KEY (id))
CREATE TABLE fr_simple_itrigger(id INTEGER GENERATED BY DEFAULT AS IDENTITY (start with 1),timezone_id VARCHAR(255) NULL,start_type INTEGER NULL,startTime TIMESTAMP NULL,repeat_count INTEGER NULL,endTime TIMESTAMP NULL,recurrence_interval INTEGER NULL,recurrence_interval_unit INTEGER NULL,PRIMARY KEY (id))
CREATE TABLE fr_calendar_itrigger(id INTEGER GENERATED BY DEFAULT AS IDENTITY (start with 1),timezone_id VARCHAR(255) NULL,start_type INTEGER NULL,startTime TIMESTAMP NULL,repeat_count INTEGER NULL,endTime TIMESTAMP NULL,minutes INTEGER NULL,hours INTEGER NULL,day_type INTEGER NULL,week_days VARCHAR(255) NULL,month_days VARCHAR(255) NULL,months VARCHAR(255) NULL,PRIMARY KEY (id))
CREATE TABLE fr_schedule_task_link_output(id INTEGER GENERATED BY DEFAULT AS IDENTITY (start with 1),outputId INTEGER NULL,fileEntryId INTEGER NULL,PRIMARY KEY (id))
SET AUTOCOMMIT TRUE
/*C13*/SET SCHEMA PUBLIC
CONNECT USER SA
DISCONNECT
/*C14*/SET SCHEMA PUBLIC
CONNECT USER SA
SET AUTOCOMMIT FALSE
SET AUTOCOMMIT TRUE
SET AUTOCOMMIT FALSE
SET AUTOCOMMIT TRUE
SET AUTOCOMMIT FALSE
SET AUTOCOMMIT TRUE
/*C15*/SET SCHEMA PUBLIC
CONNECT USER SA
SET AUTOCOMMIT FALSE
SET AUTOCOMMIT TRUE
/*C12*/SET AUTOCOMMIT FALSE
CREATE TABLE FR_T_User(id BIGINT GENERATED BY DEFAULT AS IDENTITY (start with 1),username VARCHAR(60) NOT NULL,password VARCHAR(255) NOT NULL,realname VARCHAR(60) NOT NULL,mobile VARCHAR(20) NULL,email VARCHAR(127) NULL,PRIMARY KEY (id), unique (username))
CREATE TABLE FR_T_CustomRole(id BIGINT GENERATED BY DEFAULT AS IDENTITY (start with 1),rolename VARCHAR(63) NOT NULL,description VARCHAR(255) NULL,PRIMARY KEY (id), unique (rolename))
CREATE TABLE FR_T_Post(id BIGINT GENERATED BY DEFAULT AS IDENTITY (start with 1),postname VARCHAR(63) NOT NULL,description VARCHAR(255) NULL,PRIMARY KEY (id), unique (postname))
CREATE TABLE FR_T_PlatformManageModule(id BIGINT GENERATED BY DEFAULT AS IDENTITY (start with 1),parentId BIGINT NOT NULL,name VARCHAR(63) NOT NULL,description VARCHAR(255) NULL,priority INTEGER NULL,PRIMARY KEY (id), unique (name))
CREATE TABLE FR_T_HomePage(id BIGINT GENERATED BY DEFAULT AS IDENTITY (start with 1),name VARCHAR(63) NOT NULL,url VARCHAR(255) NOT NULL,url4Pad VARCHAR(255) NOT NULL,url4Phone VARCHAR(255) NOT NULL,description VARCHAR(255) NULL,sortindex BIGINT NULL,PRIMARY KEY (id), unique (name))
CREATE TABLE FR_T_Department(id BIGINT GENERATED BY DEFAULT AS IDENTITY (start with 1),pid BIGINT NOT NULL,name VARCHAR(63) NOT NULL,description VARCHAR(255) NULL,PRIMARY KEY (id))
CREATE TABLE FR_T_CompanyRole(id BIGINT GENERATED BY DEFAULT AS IDENTITY (start with 1),postid BIGINT NOT NULL,departmentid BIGINT NOT NULL,description VARCHAR(255) NULL,PRIMARY KEY (id), unique (postid, departmentid))
CREATE TABLE fr_folderentry(id INTEGER GENERATED BY DEFAULT AS IDENTITY (start with 1),parent INTEGER NOT NULL,name VARCHAR(255) NOT NULL,description VARCHAR(255) NULL,sortindex BIGINT NULL,mobileDeviceConfig INTEGER NULL,parentDeviceConfig INTEGER NULL,mobileCoverId VARCHAR(50) NULL,PRIMARY KEY (id))
CREATE TABLE fr_reportletentry(id INTEGER GENERATED BY DEFAULT AS IDENTITY (start with 1),parent INTEGER NOT NULL,name VARCHAR(255) NOT NULL,reportletPath VARCHAR(255) NOT NULL,description VARCHAR(255) NULL,isView INTEGER NOT NULL,transmitParameters VARCHAR(1023) NULL,sortindex BIGINT NULL,mobileDeviceConfig INTEGER NULL,parentDeviceConfig INTEGER NULL,mobileCoverId VARCHAR(50) NULL,PRIMARY KEY (id))
CREATE TABLE fr_fileentry(id INTEGER GENERATED BY DEFAULT AS IDENTITY (start with 1),parent INTEGER NOT NULL,name VARCHAR(255) NOT NULL,uri VARCHAR(255) NOT NULL,description VARCHAR(255) NULL,sortindex BIGINT NULL,PRIMARY KEY (id))
CREATE TABLE fr_urlentry(id INTEGER GENERATED BY DEFAULT AS IDENTITY (start with 1),parent INTEGER NOT NULL,name VARCHAR(255) NOT NULL,url VARCHAR(255) NOT NULL,description VARCHAR(255) NULL,sortindex BIGINT NULL,mobileDeviceConfig INTEGER NULL,parentDeviceConfig INTEGER NULL,mobileCoverId VARCHAR(50) NULL,PRIMARY KEY (id))
CREATE TABLE fr_reportprocessentry(id INTEGER GENERATED BY DEFAULT AS IDENTITY (start with 1),parent INTEGER NOT NULL,processType INTEGER NOT NULL,name VARCHAR(255) NOT NULL,description VARCHAR(255) NULL,sortindex BIGINT NULL,mobileCoverId VARCHAR(50) NULL,PRIMARY KEY (id))
CREATE TABLE FR_T_CompanyRoleEntryPrivilege(id BIGINT GENERATED BY DEFAULT AS IDENTITY (start with 1),roleid BIGINT NOT NULL,type INTEGER NOT NULL,entryid BIGINT NOT NULL,view BIGINT NOT NULL,authorized BIGINT NOT NULL,edit BIGINT NOT NULL,PRIMARY KEY (id), unique (roleid, type, entryid))
CREATE TABLE FR_T_CustomRoleEntryPrivilege(id BIGINT GENERATED BY DEFAULT AS IDENTITY (start with 1),roleid BIGINT NOT NULL,type INTEGER NOT NULL,entryid BIGINT NOT NULL,view BIGINT NOT NULL,authorized BIGINT NOT NULL,edit BIGINT NOT NULL,PRIMARY KEY (id), unique (roleid, type, entryid))
CREATE TABLE FR_T_CompanyRoleModulePrivilege(id BIGINT GENERATED BY DEFAULT AS IDENTITY (start with 1),roleid BIGINT NOT NULL,moduleid BIGINT NOT NULL,view BIGINT NOT NULL,authorized BIGINT NOT NULL,PRIMARY KEY (id), unique (roleid, moduleid))
CREATE TABLE FR_T_CustomRoleModulePrivilege(id BIGINT GENERATED BY DEFAULT AS IDENTITY (start with 1),roleid BIGINT NOT NULL,moduleid BIGINT NOT NULL,view BIGINT NOT NULL,authorized BIGINT NOT NULL,PRIMARY KEY (id), unique (roleid, moduleid))
CREATE TABLE FR_T_CompanyRoleDepAndCRolePrivilege(id BIGINT GENERATED BY DEFAULT AS IDENTITY (start with 1),roleid BIGINT NOT NULL,type INTEGER NOT NULL,deporcroleid BIGINT NOT NULL,PRIMARY KEY (id), unique (roleid, type, deporcroleid))
CREATE TABLE FR_T_CustomRoleDepAndCRolePrivilege(id BIGINT GENERATED BY DEFAULT AS IDENTITY (start with 1),roleid BIGINT NOT NULL,type INTEGER NOT NULL,deporcroleid BIGINT NOT NULL,PRIMARY KEY (id), unique (roleid, type, deporcroleid))
CREATE TABLE FR_T_CompanyRoleESPrivilege(id BIGINT GENERATED BY DEFAULT AS IDENTITY (start with 1),roleid BIGINT NOT NULL,type INTEGER NOT NULL,entryid BIGINT NOT NULL,PRIMARY KEY (id), unique (roleid, type, entryid))
CREATE TABLE FR_T_CustomRoleESPrivilege(id BIGINT GENERATED BY DEFAULT AS IDENTITY (start with 1),roleid BIGINT NOT NULL,type INTEGER NOT NULL,entryid BIGINT NOT NULL,PRIMARY KEY (id), unique (roleid, entryid))
CREATE TABLE FR_T_CompanyRoleTemplatePrivilege(id BIGINT GENERATED BY DEFAULT AS IDENTITY (start with 1),roleId BIGINT NOT NULL,path VARCHAR(255) NOT NULL,page BIGINT NOT NULL,write BIGINT NOT NULL,design BIGINT NOT NULL,PRIMARY KEY (id), unique (roleId, path))
CREATE TABLE FR_T_CustomRoleTemplatePrivilege(id BIGINT GENERATED BY DEFAULT AS IDENTITY (start with 1),roleId BIGINT NOT NULL,path VARCHAR(255) NOT NULL,page BIGINT NOT NULL,write BIGINT NOT NULL,design BIGINT NOT NULL,PRIMARY KEY (id), unique (roleId, path))
CREATE TABLE FR_T_CompanyRoleDataConnectionPrivilege(id BIGINT GENERATED BY DEFAULT AS IDENTITY (start with 1),roleId BIGINT NOT NULL,name VARCHAR(255) NOT NULL,view BIGINT NOT NULL,PRIMARY KEY (id), unique (roleId, name))
CREATE TABLE FR_T_CustomRoleDataConnectionPrivilege(id BIGINT GENERATED BY DEFAULT AS IDENTITY (start with 1),roleId BIGINT NOT NULL,name VARCHAR(255) NOT NULL,view BIGINT NOT NULL,PRIMARY KEY (id), unique (roleId, name))
CREATE TABLE FR_T_CompanyRoleHomePagePrivilege(id BIGINT GENERATED BY DEFAULT AS IDENTITY (start with 1),roleid BIGINT NOT NULL,homepageid BIGINT NOT NULL,view BIGINT NOT NULL,PRIMARY KEY (id), unique (roleid, homepageid))
CREATE TABLE FR_T_CustomRoleHomePagePrivilege(id BIGINT GENERATED BY DEFAULT AS IDENTITY (start with 1),roleid BIGINT NOT NULL,homepageid BIGINT NOT NULL,view BIGINT NOT NULL,PRIMARY KEY (id), unique (roleid, homepageid))
CREATE TABLE FR_T_FavoriteNode(id BIGINT GENERATED BY DEFAULT AS IDENTITY (start with 1),userid BIGINT NOT NULL,type INTEGER NOT NULL,entryid BIGINT NOT NULL,PRIMARY KEY (id))
CREATE TABLE FR_T_UserEntryNotification(id BIGINT GENERATED BY DEFAULT AS IDENTITY (start with 1),username VARCHAR(255) NOT NULL,entryid VARCHAR(255) NOT NULL,PRIMARY KEY (id), unique (username, entryid))
CREATE TABLE FR_T_LoginUser(id BIGINT GENERATED BY DEFAULT AS IDENTITY (start with 1),username VARCHAR(20) NOT NULL,loginType INTEGER NULL,PRIMARY KEY (id), unique (username))
CREATE TABLE FR_T_UserDeviceInfo(id BIGINT GENERATED BY DEFAULT AS IDENTITY (start with 1),username VARCHAR(60) NOT NULL,macAddress VARCHAR(60) NOT NULL,deviceName VARCHAR(255) NULL,passed BOOLEAN NOT NULL,PRIMARY KEY (id))
DROP TABLE fr_schedule_actionlist
CREATE TABLE fr_schedule_actionlist(id INTEGER GENERATED BY DEFAULT AS IDENTITY (start with 1),emailId BIGINT NULL,ftpId BIGINT NULL,printId BIGINT NULL,classId BIGINT NULL,pushId BIGINT NULL,extraOutputFileActions VARCHAR(255) NOT NULL,PRIMARY KEY (id))
DROP TABLE fr_schedule_email
CREATE TABLE fr_schedule_email(id INTEGER GENERATED BY DEFAULT AS IDENTITY (start with 1),toAddress VARCHAR(255) NULL,ccAddress VARCHAR(255) NULL,bccAddress VARCHAR(255) NULL,subject VARCHAR(255) NULL,bodyContent VARCHAR(255) NULL,canPreviewAttach BOOLEAN NULL,isRole BOOLEAN NOT NULL,PRIMARY KEY (id))
CREATE TABLE fr_schedule_push(id INTEGER GENERATED BY DEFAULT AS IDENTITY (start with 1),content VARCHAR(255) NULL,PRIMARY KEY (id))
CREATE TABLE fr_cronexpression_itrigger(id INTEGER GENERATED BY DEFAULT AS IDENTITY (start with 1),timezone_id VARCHAR(255) NULL,start_type INTEGER NULL,startTime TIMESTAMP NULL,endTime TIMESTAMP NULL,cron_expression VARCHAR(255) NULL,PRIMARY KEY (id))
CREATE TABLE FR_T_CustomRole_User(id BIGINT GENERATED BY DEFAULT AS IDENTITY (start with 1),Userid BIGINT NOT NULL,CustomRoleid BIGINT NOT NULL,PRIMARY KEY (id), unique (Userid, CustomRoleid))
CREATE TABLE FR_T_Department_Post_User(id BIGINT GENERATED BY DEFAULT AS IDENTITY (start with 1),Userid BIGINT NOT NULL,Departmentid BIGINT NOT NULL,Postid BIGINT NOT NULL,PRIMARY KEY (id), unique (Userid, Departmentid, Postid))
alter table FR_T_CompanyRole add constraint fr_fk_CompanyRole__p foreign key (postid) references FR_T_Post on delete cascade
alter table FR_T_CompanyRole add constraint fr_fk_CompanyRole__d foreign key (departmentid) references FR_T_Department on delete cascade
alter table FR_T_CompanyRoleEntryPrivilege add constraint fr_fk_CompanyRoleEntryPrivilege__r foreign key (roleid) references FR_T_CompanyRole on delete cascade
alter table FR_T_CustomRoleEntryPrivilege add constraint fr_fk_CustomRoleEntryPrivilege__r foreign key (roleid) references FR_T_CustomRole on delete cascade
alter table FR_T_CompanyRoleModulePrivilege add constraint fr_fk_CompanyRoleModulePrivilege__r foreign key (roleid) references FR_T_CompanyRole on delete cascade
alter table FR_T_CustomRoleModulePrivilege add constraint fr_fk_CustomRoleModulePrivilege__r foreign key (roleid) references FR_T_CustomRole on delete cascade
alter table FR_T_CompanyRoleDepAndCRolePrivilege add constraint fr_fk_CompanyRoleDepAndCRolePrivilege__r foreign key (roleid) references FR_T_CompanyRole on delete cascade
alter table FR_T_CustomRoleDepAndCRolePrivilege add constraint fr_fk_CustomRoleDepAndCRolePrivilege__r foreign key (roleid) references FR_T_CustomRole on delete cascade
alter table FR_T_CompanyRoleESPrivilege add constraint fr_fk_CompanyRoleESPrivilege__r foreign key (roleid) references FR_T_CompanyRole on delete cascade
alter table FR_T_CustomRoleESPrivilege add constraint fr_fk_CustomRoleESPrivilege__r foreign key (roleid) references FR_T_CustomRole on delete cascade
alter table FR_T_CompanyRoleTemplatePrivilege add constraint fr_fk_CompanyRoleTemplatePrivilege__r foreign key (roleId) references FR_T_CompanyRole on delete cascade
alter table FR_T_CustomRoleTemplatePrivilege add constraint fr_fk_CustomRoleTemplatePrivilege__r foreign key (roleId) references FR_T_CustomRole on delete cascade
alter table FR_T_CompanyRoleDataConnectionPrivilege add constraint fr_fk_CompanyRoleDataConnectionPrivilege__r foreign key (roleId) references FR_T_CompanyRole on delete cascade
alter table FR_T_CustomRoleDataConnectionPrivilege add constraint fr_fk_CustomRoleDataConnectionPrivilege__r foreign key (roleId) references FR_T_CustomRole on delete cascade
alter table FR_T_CompanyRoleHomePagePrivilege add constraint fr_fk_CompanyRoleHomePagePrivilege__r foreign key (roleid) references FR_T_CompanyRole on delete cascade
alter table FR_T_CustomRoleHomePagePrivilege add constraint fr_fk_CustomRoleHomePagePrivilege__r foreign key (roleid) references FR_T_CustomRole on delete cascade
alter table FR_T_FavoriteNode add constraint fr_fk_FavoriteNode__u foreign key (userid) references FR_T_User on delete cascade
alter table FR_T_CustomRole_User add constraint fr_fk_CustomRole_User__U foreign key (Userid) references FR_T_User on delete cascade
alter table FR_T_CustomRole_User add constraint fr_fk_CustomRole_User__C foreign key (CustomRoleid) references FR_T_CustomRole on delete cascade
alter table FR_T_Department_Post_User add constraint fr_fk_Department_Post_User__U foreign key (Userid) references FR_T_User on delete cascade
alter table FR_T_Department_Post_User add constraint fr_fk_Department_Post_User__D foreign key (Departmentid) references FR_T_Department on delete cascade
alter table FR_T_Department_Post_User add constraint fr_fk_Department_Post_User__P foreign key (Postid) references FR_T_Post on delete cascade
/*C11*/SET AUTOCOMMIT FALSE
INSERT INTO FR_T_PLATFORMMANAGEMODULE VALUES(1,-1,'FS-Module-Platform_Manager','',0)
INSERT INTO FR_T_PLATFORMMANAGEMODULE VALUES(2,1,'FS-Module-Report_Manager','',1)
INSERT INTO FR_T_PLATFORMMANAGEMODULE VALUES(3,1,'FS-Module-User_Manager','',2)
INSERT INTO FR_T_PLATFORMMANAGEMODULE VALUES(18,1,'FS-Module-Privilege_Manager','',3)
INSERT INTO FR_T_PLATFORMMANAGEMODULE VALUES(5,1,'FS-Module-Server_Setting','',5)
INSERT INTO FR_T_PLATFORMMANAGEMODULE VALUES(14,1,'FS-Module-Look_And_Feel','',6)
INSERT INTO FR_T_PLATFORMMANAGEMODULE VALUES(8,1,'FS-Module-Simple_Register','',7)
INSERT INTO FR_T_PLATFORMMANAGEMODULE VALUES(16,1,'FS-Module-Simple_Scheduler','',4)
INSERT INTO FR_T_PLATFORMMANAGEMODULE VALUES(17,1,'FS-Mobile-Mobile_Dev_Binding','',8)
INSERT INTO FR_T_PLATFORMMANAGEMODULE VALUES(19,1,'FS-Module-Plugin_Operate','',9)
INSERT INTO FR_T_PLATFORMMANAGEMODULE VALUES(9,1,'FS-Module-System_Monitor','',10)
COMMIT
SET AUTOCOMMIT TRUE
SET AUTOCOMMIT FALSE
INSERT INTO FR_T_DEPARTMENT VALUES(1,-2,'\u6240\u6709\u90e8\u95e8','')
INSERT INTO FR_T_POST VALUES(1,'\u6240\u6709\u804c\u52a1','')
INSERT INTO FR_T_COMPANYROLE VALUES(1,1,1,'')
COMMIT
SET AUTOCOMMIT TRUE
/*C12*/DISCONNECT
/*C10*/SET AUTOCOMMIT FALSE
ALTER TABLE fr_reportprocessentry ADD mobileDeviceConfig INTEGER DEFAULT 7 NULL
SET AUTOCOMMIT TRUE
SET AUTOCOMMIT FALSE
ALTER TABLE fr_reportprocessentry ADD parentDeviceConfig INTEGER DEFAULT 7 NULL
SET AUTOCOMMIT TRUE
SET AUTOCOMMIT FALSE
CREATE TABLE FR_REPORT_PROCESS_TASK(id BIGINT GENERATED BY DEFAULT AS IDENTITY (start with 1),name VARCHAR(1024) NOT NULL,processId BIGINT NOT NULL,creatorId BIGINT NOT NULL,issueControl VARCHAR(1024) NULL,deadLineDate INTEGER NULL,deadLineType CHAR NULL,remindControl VARCHAR(255) NULL,createTime TIMESTAMP NOT NULL,issueOver BOOLEAN NOT NULL,parentId BIGINT NULL,creatorName VARCHAR(1024) NOT NULL,PRIMARY KEY (id))
SET AUTOCOMMIT TRUE
/*C9*/SET AUTOCOMMIT FALSE
CREATE TABLE FR_PROCESS_TASK_IMPL(id BIGINT GENERATED BY DEFAULT AS IDENTITY (start with 1),taskId BIGINT NOT NULL,processId BIGINT NOT NULL,operatorJSON VARCHAR(1024) NOT NULL,reportOffset TINYINT NOT NULL,operatorOffset BIGINT NOT NULL,needAllComplete BOOLEAN NOT NULL,currentNodeIdx TINYINT NOT NULL,createTime TIMESTAMP NOT NULL,note VARCHAR(10240) NULL,state TINYINT NOT NULL,sonTaskId VARCHAR(255) NULL,sendTime TIMESTAMP NOT NULL,senderId BIGINT NOT NULL,completeState VARCHAR(1024) NOT NULL,parentId BIGINT NULL,nodeRoute VARCHAR(1024) NULL,alerted BOOLEAN NOT NULL,deadLine TIMESTAMP NULL,sender VARCHAR(1024) NOT NULL,operatorOffsetName VARCHAR(1024) NULL,frTaskId BIGINT NOT NULL,PRIMARY KEY (id))
SET AUTOCOMMIT TRUE
/*C10*/SET AUTOCOMMIT FALSE
SET AUTOCOMMIT TRUE
/*C11*/DISCONNECT
/*C15*/SET AUTOCOMMIT FALSE
SET AUTOCOMMIT TRUE
SET AUTOCOMMIT FALSE
SET AUTOCOMMIT TRUE
SET AUTOCOMMIT FALSE
SET AUTOCOMMIT TRUE
SET AUTOCOMMIT FALSE
SET AUTOCOMMIT TRUE
SET AUTOCOMMIT FALSE
SET AUTOCOMMIT TRUE
SET AUTOCOMMIT FALSE
SET AUTOCOMMIT TRUE
SET AUTOCOMMIT FALSE
SET AUTOCOMMIT TRUE
SET AUTOCOMMIT FALSE
SET AUTOCOMMIT TRUE
SET AUTOCOMMIT FALSE
SET AUTOCOMMIT TRUE
SET AUTOCOMMIT FALSE
SET AUTOCOMMIT TRUE
SET AUTOCOMMIT FALSE
SET AUTOCOMMIT TRUE
